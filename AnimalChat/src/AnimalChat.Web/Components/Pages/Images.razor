@page "/images"
@using AnimalChat.Web.Services
@attribute [StreamRendering(true)]

@inject ImageService ImageService

<PageTitle>Dyr</PageTitle>

<div class="jumbotron p-4 p-md-5 text-white rounded bg-dark">
    <div class="col-md-6 px-0">
        <h1 class="display-4">Dyr</h1>
    </div>
</div>

@if (_images.Count == 0)
{
    <p><em>Loading...</em></p>
}
else
{
    <table>
        <tbody>
            @for (int i = 0; i < _images.Count; i += 3)
            {
                <tr>
                    @for (int j = i; j < i + 3 && j < _images.Count; j++)
                    {
                        <td>
                            <img src="@GetImageSrc(_images[j].Data)" alt="@_images[j].Description" width="400"/>
                            <div>@_images[j].Description</div>
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Image> _images = new List<Image>();

    protected override async Task OnInitializedAsync()
    {
        _images = (await ImageService.GetImagesAsync()).ToList();
    }

    private static string GetImageSrc(byte[] imageData)
    {
        if (imageData.Length == 0)
        {
            return string.Empty;
        }
        var base64Data = Convert.ToBase64String(imageData);
        return $"data:image/jpeg;base64,{base64Data}";
    }
}